import asyncio
from aiogram import Bot, Dispatcher, executor, types, filters
from datetime import datetime
from DataBase.User import User
from DataBase.Base import Base
from DataBase.Ruoff import EssenceSetting
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from config import DB_URL, TOKEN
from aiogram.utils.exceptions import BotBlocked


mybot = Bot(token=TOKEN)
dp = Dispatcher(mybot)

engine = create_engine(DB_URL)

Session = sessionmaker(bind=engine)

Base.metadata.create_all(engine)

inline_event_buttons = types.InlineKeyboardMarkup()

b1 = types.InlineKeyboardButton(text='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ', callback_data='ruoff_set_event')
b2 = types.InlineKeyboardButton(text='–£–±—Ä–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ', callback_data='ruoff_remove_event')

inline_event_buttons.add(b1, b2)


@dp.message_handler(commands=['event'])
async def about_event(message: types.Message):
    await message.answer('–ö–æ—Ä–æ–±–∫–∞ –£–¥–∞—á–∏ - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Å 6 –¥–µ–∫–∞–±—Ä—è –¥–æ 3 —è–Ω–≤–∞—Ä—è.\n'
                         ' –†–∞–∑ –≤ –¥–µ–Ω—å –Ω–∞ –û—Å—Ç—Ä–æ–≤–µ –ì—Ä—ë–∑ –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –°—É–Ω–¥—É–∫–∏ –£–¥–∞—á–∏'
                         ' –≤ 11:30 –∏ 21:30.\n'
                         '\n'
                         '–ï—Å–ª–∏ –ø–æ–≤–µ–∑—ë—Ç, –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤ —Å—É–Ω–¥—É–∫–µ –∑–≤–µ–∑–¥—É –∏ –ø—Ä–æ–π–¥—ë—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥.'
                         ' –ê –µ—Å–ª–∏ –Ω–µ—Ç - –∑–Ω–∞—á–∏—Ç –Ω–µ—Ç.\n'
                         '\n'
                         '–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–¥–∞—á–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å—É–Ω–¥—É–∫–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–∞–≥—Ä–∞–¥—É -'
                         ' —Ç–æ—Ä—Ç–∏–∫–∏ –∏ –≤—Å—è–∫–∞—è –≤—Å—è—á–∏–Ω–∞',
                         reply_markup=inline_event_buttons)


@dp.callback_query_handler(filters.Text(contains='ruoff_set_event'))
async def set_event(callback_query: types.CallbackQuery):
    session = Session()

    user = session.query(User).filter_by(telegram_id=callback_query.from_user.id).first()
    setting = session.query(EssenceSetting).filter_by(id_user=user.telegram_id).first()
    setting.event = True

    session.commit()

    user.upd_date = datetime.today()
    session.commit()

    session.close()

    await callback_query.message.answer('–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –∏–≤–µ–Ω—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    await callback_query.answer()


@dp.callback_query_handler(filters.Text(contains='ruoff_remove_event'))
async def remove_event(callback_query: types.CallbackQuery):
    session = Session()

    user = session.query(User).filter_by(telegram_id=callback_query.from_user.id).first()
    setting = session.query(EssenceSetting).filter_by(id_user=user.telegram_id).first()
    setting.event = False

    session.commit()

    user.upd_date = datetime.today()
    session.commit()

    session.close()

    await callback_query.message.answer('–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –∏–≤–µ–Ω—Ç–µ —É–±—Ä–∞–Ω–æ')
    await callback_query.answer()


async def fantasyisle_notification_wrapper():
    session = Session()
    users = session.query(User).all()
    for user in users:
        setting = session.query(EssenceSetting).filter_by(id_user=user.telegram_id).first()
        if setting.event is True:
            print(user.telegram_id, user.username, '–ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –¥–ª—è –∏–≤–µ–Ω—Ç–∞')
            await fantasyisle_notification(user)
    session.close()


async def fantasyisle_notification(user: User):
    now = datetime.now().strftime('%H:%M')
    try:
        if now == '11:25' or now == '21:25':
            await mybot.send_message(user.telegram_id, 'üéÇüéÇ –ö–æ—Ä–æ–±–∫–∞ –£–¥–∞—á–∏ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ –ì—Ä—ë–∑ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç')
            print(now, user.telegram_id, user.username, '–ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–≤–µ–Ω—Ç–µ')
        else:
            print(now, '–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –∏–≤–µ–Ω—Ç–∞')
    except BotBlocked:
        print('[ERROR] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞:', now, user.telegram_id, user.username)
