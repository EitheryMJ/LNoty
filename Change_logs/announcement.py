import asyncio
from aiogram import Bot, Dispatcher, executor, types, filters
from datetime import datetime
from DataBase.User import User
from DataBase.Base import Base
from DataBase.Ruoff import Setting
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from config import DB_URL, TOKEN


mybot = Bot(token=TOKEN)
dp = Dispatcher(mybot)

engine = create_engine(DB_URL)

Session = sessionmaker(bind=engine)

Base.metadata.create_all(engine)


async def announcement():
    now = datetime.now().strftime('%H:%M')
    session = Session()
    users = session.query(User).all()
    for user in users:
        text = '–ü—Ä–∏–≤–µ—Ç! –° –º–æ–º–µ–Ω—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –ø—Ä–æ—à–µ–ª –º–µ—Å—è—Ü? –ò –Ω–∞—Å —É–∂–µ –º–Ω–æ–≥–æ, –æ—á–µ–Ω—å-–æ—á–µ–Ω—å-–æ—á–µ–Ω—å –º–Ω–æ–≥–æ, —Ö–µ-—Ö–µ-—Ö–µ.' \
               ' –ù–∞–¥–µ—é—Å—å, –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –≤—ã –æ—Ç–∂–∞–ª–∏ –≤—Å–µ—Ö —Å–æ–ª–æ –±–æ—Å—Å–∏–∫–æ–≤ —É –¥—Ä–∞–π–≤–µ—Ä–∫–æ–≤, –∑–∞–ª—É—Ç–∞–ª–∏ –≤–∞–≥–æ–Ω –∞–Ω—Ç–∏—á–∫–∏ –∏' \
               ' –≤—Å–µ–≥–¥–∞ –±—ã–ª–∏ –≤ –Ω—É–∂–Ω–æ–º –º–µ—Å—Ç–µ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è\n\n' \
               '–ò–∑ –Ω–æ–≤–µ–Ω—å–∫–æ–≥–æ:\n' \
               '- ü¶ä –¥–æ–±–∞–≤–∏–ª–∞ –Ω–æ–≤—ã–π –∏–≤–µ–Ω—Ç —Å –ø–∏—Ç–æ–º—Ü–∞–º–∏ —Å 23.08 –ø–æ 06.09, –≤–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω—Å —á–µ—Ä–µ–∑ /event\n' \
               '- –¥–æ–±–∞–≤–∏–ª–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–Ω–∞—Ç–∏–∫–æ–≤. –•–æ—á–µ—à—å –æ–±–º–∞–∑–∞—Ç—å –º–µ–Ω—è –º–∞—Ä–º–µ–ª–∞–¥–∫–∞–º–∏? –ö–ª–∏–∫–∞–π —Å—é–¥–∞ /donate\n\n' \
               '–í—Å–µ–≥–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–∂–µ –≤–∞—à–µ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞, –∫–æ–±–∞—Ç–æ—Ö–∞!'
        try:
            await mybot.send_message(text=text, chat_id=user.telegram_id)
            print(now, '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', user.telegram_id, user.username)
        except:
            print('[ERROR]', now, '—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', user.telegram_id, user.username)
            continue


async def main():
    now_start = datetime.now().strftime('%H:%M')
    print(now_start, '–ó–∞–ø—É—Å–∫ announcement Lineage2Notifications')
    await announcement()


if __name__ == '__main__':
    asyncio.run(main())
    executor.start_polling(dp, skip_updates=True)
