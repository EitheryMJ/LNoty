import asyncio
from aiogram import Bot, Dispatcher, executor, types, filters
from datetime import datetime
from DataBase.User import User
from DataBase.Base import Base
from DataBase.Expanse import Expanse
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from config import DB_URL, TOKEN

mybot = Bot(token=TOKEN)
dp = Dispatcher(mybot)

engine = create_engine(DB_URL)

Session = sessionmaker(bind=engine)

Base.metadata.create_all(engine)

# hellbound buttons
inline_hellbound_buttons = types.InlineKeyboardMarkup()

b16 = types.InlineKeyboardButton(text='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ', callback_data='expanse_sethellbound')
b17 = types.InlineKeyboardButton(text='–£–±—Ä–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ', callback_data='expanse_removehellbound')

inline_hellbound_buttons.add(b16, b17)


# HELLBOUND SETTINGS
@dp.message_handler(commands=['expanse_hellbound'])
async def expanse_about_hellbound(message: types.Message):
    await message.answer('–û—Å—Ç—Ä–æ–≤ –ê–¥–∞ ‚Äî –º–µ–∂—Å–µ—Ä–≤–µ—Ä–Ω–∞—è –∑–æ–Ω–∞ –æ—Ö–æ—Ç—ã –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π 85+ –∏'
                         ' –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å—É–±–±–æ—Ç—É —Å 10:00 –¥–æ 00:00.',
                         reply_markup=inline_hellbound_buttons)


@dp.callback_query_handler(filters.Text(contains='expanse_sethellbound'))
async def expanse_set_hellbound(callback_query: types.CallbackQuery):
    session = Session()

    user = session.query(User).filter_by(telegram_id=callback_query.from_user.id).first()
    setting = session.query(Expanse).filter_by(id_user=user.telegram_id).first()
    setting.hellbound = True

    session.commit()
    session.close()

    await callback_query.message.answer('–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    await callback_query.answer()


@dp.callback_query_handler(filters.Text(contains='expanse_removehellbound'))
async def expanse_remove_hellbound(callback_query: types.CallbackQuery):
    session = Session()

    user = session.query(User).filter_by(telegram_id=callback_query.from_user.id).first()
    setting = session.query(Expanse).filter_by(id_user=user.telegram_id).first()
    setting.hellbound = False

    session.commit()
    session.close()

    await callback_query.message.answer('–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞ —É–±—Ä–∞–Ω–æ')
    await callback_query.answer()


async def expanse_hellbound_notification_wrapper():
    session = Session()
    users = session.query(User).all()

    for user in users:
        setting = session.query(Expanse).filter_by(id_user=user.telegram_id).first()
        if setting.hellbound is True:
            await expanse_hellbound_notification(user)
    session.close()


async def expanse_hellbound_notification(user: User):
    now = datetime.now().strftime('%H:%M')
    if now == '09:55':
        await mybot.send_message(user.telegram_id, 'üî• –û—Å—Ç—Ä–æ–≤ –ê–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç')
        print(now, user.telegram_id, user.username, '–ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞')
    elif now == '17:55':
        await mybot.send_message(user.telegram_id, 'üî• –¶–∏—Ç–∞–¥–µ–ª—å –Ω–∞ –û—Å—Ç—Ä–æ–≤–µ –ê–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç')
        print(now, user.telegram_id, user.username, '–ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –¶–∏—Ç–∞–¥–µ–ª–∏ –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞')
    elif now == '22:59':
        await mybot.send_message(user.telegram_id, 'üî• –î–æ –∑–∞–∫—Ä—ã—Ç–∏—è –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞ –æ—Å—Ç–∞–ª—Å—è —á–∞—Å–∏–∫')
        print(now, user.telegram_id, user.username, '–ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞')
    else:
        print(now, '–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –û—Å—Ç—Ä–æ–≤–∞ –ê–¥–∞')
